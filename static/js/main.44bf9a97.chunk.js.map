{"version":3,"sources":["Header.js","Note.js","NotesList.js","App.js","index.js"],"names":["Header","props","react_default","a","createElement","className","onClick","addNote","type","placeholder","value","searchText","onChange","onSearch","Note","note","title","e","updatedValue","target","editMeId","id","onType","description","removeNote","keepSearchMatches","doesMatchSearch","NotesList","noteElements","notes","filter","map","src_Note","key","App","state","newNotes","Date","now","concat","Object","toConsumableArray","_this","setState","updatedKey","updatedNotes","toLowerCase","titleMatch","includes","descriptionMatch","hasMatch","deleteMeId","stringifiedNotes","JSON","stringify","this","localStorage","setItem","getItem","savedNotes","parse","src_Header","src_NotesList","Component","rootElement","document","getElementById","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.44bf9a97.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Header = (props) => (\r\n  <header className=\"app-header__title\">\r\n    <h1 className=\"app-header\">Super Sticky Notes</h1>\r\n    <aside className=\"app-header__controls\">\r\n      <button className=\"add-new\" onClick={props.addNote}>\r\n        + New Note\r\n      </button>\r\n      <input\r\n        className=\"search\"\r\n        type=\"text\"\r\n        placeholder=\"Type here to search...\"\r\n        value={props.searchText}\r\n        onChange={props.onSearch}\r\n      />\r\n    </aside>\r\n  </header>\r\n);\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nconst Note = (props) => {\r\n  const updateTitle = (e) => {\r\n    const updatedValue = e.target.value;\r\n    const editMeId = props.note.id;\r\n    props.onType(editMeId, \"title\", updatedValue);\r\n  };\r\n  const updateDescription = (e) => {\r\n    const updatedValue = e.target.value;\r\n    const editMeId = props.note.id;\r\n    props.onType(editMeId, \"description\", updatedValue);\r\n  };\r\n\r\n  const clickDelete = () => props.removeNote(props.note.id);\r\n\r\n  return (\r\n    <li className=\"note\">\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Title\"\r\n        className=\"note__title\"\r\n        value={props.note.title}\r\n        onChange={updateTitle}\r\n      />\r\n      <textarea\r\n        placeholder=\"Description...\"\r\n        className=\"note__description\"\r\n        value={props.note.description}\r\n        onChange={updateDescription}\r\n      />\r\n      <span className=\"note__delete\" onClick={clickDelete}>\r\n        X\r\n      </span>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Note;\r\n","import React from \"react\";\r\nimport Note from \"./Note.js\";\r\n\r\nconst keepSearchMatches = (note) => note.doesMatchSearch;\r\n\r\nconst NotesList = (props) => {\r\n  const renderNotes = (note) => (\r\n    <Note\r\n      note={note}\r\n      key={note.id}\r\n      onType={props.onType}\r\n      removeNote={props.removeNote}\r\n    />\r\n  );\r\n  const searchMatches = props.notes.filter(keepSearchMatches);\r\n  const noteElements = searchMatches.map(renderNotes);\r\n  return <ul className=\"notes-list\">{noteElements}</ul>;\r\n};\r\n\r\nexport default NotesList;\r\n","import React, { Component } from \"react\";\nimport Header from \"./Header.js\";\nimport NotesList from \"./NotesList.js\";\n\nclass App extends Component {\n  state = {\n    notes: [],\n    searchText: \"\"\n  };\n\n  addNote = () => {\n    const newNote = {\n      id: Date.now(),\n      title: \"\",\n      description: \"\",\n      doesMatchSearch: true\n    };\n\n    const newNotes = [newNote, ...this.state.notes];\n    this.setState({ notes: newNotes });\n  };\n\n  onType = (editMeId, updatedKey, updatedValue) => {\n    const updateIdMatch = (note) => {\n      if (note.id !== editMeId) {\n        return note;\n      } else {\n        if (updatedKey === \"title\") {\n          note.title = updatedValue;\n          return note;\n        } else {\n          note.description = updatedValue;\n          return note;\n        }\n      }\n    };\n    const updatedNotes = this.state.notes.map(updateIdMatch);\n    this.setState({ notes: updatedNotes });\n  };\n\n  onSearch = (e) => {\n    const searchText = e.target.value.toLowerCase();\n    const updatedNotes = this.state.notes.map((note) => {\n      if (!searchText) {\n        note.doesMatchSearch = true;\n        return note;\n      } else {\n        const title = note.title.toLowerCase();\n        const description = note.description.toLowerCase();\n        const titleMatch = title.includes(searchText);\n        const descriptionMatch = description.includes(searchText);\n        const hasMatch = titleMatch || descriptionMatch;\n        note.doesMatchSearch = hasMatch;\n        return note;\n      }\n    });\n    this.setState({ notes: updatedNotes, searchText: searchText });\n  };\n\n  removeNote = (deleteMeId) => {\n    const notIdMatch = (note) => note.id !== deleteMeId;\n    const updatedNotes = this.state.notes.filter(notIdMatch);\n    this.setState({ notes: updatedNotes });\n  };\n\n  componentDidUpdate() {\n    const stringifiedNotes = JSON.stringify(this.state.notes);\n    localStorage.setItem(\"savedNotes\", stringifiedNotes);\n  }\n\n  componentDidMount() {\n    const stringifiedNotes = localStorage.getItem(\"savedNotes\");\n    if (stringifiedNotes) {\n      const savedNotes = JSON.parse(stringifiedNotes);\n      this.setState({ notes: savedNotes });\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Header\n          searchText={this.state.searchText}\n          addNote={this.addNote}\n          onSearch={this.onSearch}\n        />\n        <NotesList\n          notes={this.state.notes}\n          onType={this.onType}\n          removeNote={this.removeNote}\n        />\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App.js\";\nimport \"./index.css\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}